// Code generated for package ebasetools by go-bindata DO NOT EDIT. (@generated)
// sources:
// templates/GRPC/config.yml
// templates/GRPC/main.go
// templates/GRPC/proto/auth.proto
// templates/GRPC/proto/user/auth.pb.go
// templates/GRPC/proto/user/auth_grpc.pb.go
// templates/GRPC/proto/user/user.pb.go
// templates/GRPC/proto/user.proto
// templates/HTTP/config.yml
// templates/HTTP/main.go
// templates/KAFKA/config.yml
// templates/KAFKA/main.go
// templates/TASK/config.yml
// templates/TASK/main.go
// templates/micro/config.yml
// templates/micro/main.go
package app

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGrpcConfigYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x4a\xc3\x40\x10\x86\xef\xfb\x14\x3f\xdb\xab\x86\xc4\x60\x43\xf6\x5a\x10\x45\xc5\x62\x73\x97\xad\x99\xc6\xd0\x4d\x76\xd9\x89\xb1\xf5\x11\x04\xf1\x05\xbc\x88\x47\x0f\x3e\x55\xf5\x35\x24\x49\xc1\x2a\x7a\x9a\x9d\x6f\xe7\xdf\xfd\x46\x3b\x97\xad\x1d\x29\x14\x97\xd3\x09\x46\xf2\x38\xcb\xa6\x72\x0f\xb2\x6b\xbb\x9a\x69\x5e\x76\xf5\x54\x2f\x96\x5a\x0a\x63\x8b\x33\x6a\xc9\x28\x1c\x76\xe7\xa3\xd2\x90\x82\xac\xd6\xc6\x16\x8b\xd2\x50\x60\x6c\x21\x05\x93\x6f\x4b\xe2\xab\x5a\x57\xa4\xd0\x10\x37\x42\xe4\xba\xd1\x73\xcd\xc4\x4a\x00\xfb\xd8\xb9\x02\x80\x1b\xcb\x8d\x42\x74\x90\x04\x61\x10\x06\x51\xcf\x9c\xf5\x8d\x42\x1c\x87\xe3\xbe\xbd\x65\xf2\x43\xca\x5b\x3b\xa4\x9c\x66\xbe\xb3\x3e\xdf\x41\xf9\xfc\xd7\xcb\x95\x5e\x9d\xe4\x86\x26\xb6\xae\x59\x21\x0a\x7b\x78\xae\x57\x17\x8e\xea\x6f\xe8\x29\x2f\xff\x37\xc3\x5f\x6a\x50\x18\xc7\x49\xfa\x53\x64\xeb\x00\x85\x70\x3b\x68\xcd\xac\xbc\xa7\xfe\x13\x51\x78\x77\x3d\x23\xdf\x92\xef\x06\x87\xfd\xd2\x34\x4d\x80\xd1\xc7\xf3\xe3\xe6\xe1\xe5\xf3\xed\x7d\xf3\xf4\x2a\x84\xf8\x0a\x00\x00\xff\xff\xab\x6a\xd6\x87\x96\x01\x00\x00")

func templatesGrpcConfigYmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesGrpcConfigYml,
		"templates/GRPC/config.yml",
	)
}

func templatesGrpcConfigYml() (*asset, error) {
	bytes, err := templatesGrpcConfigYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/GRPC/config.yml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1726715596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGrpcMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\x5d\x6b\x24\x45\x17\xbe\xae\xfa\x15\xf5\x36\xec\x52\xbd\x74\xaa\xdf\x28\x8b\x30\xb2\x82\x46\x09\x03\x12\x87\xc4\xe8\xe5\x52\xd3\x7d\xa6\x53\x9b\xee\xaa\xb6\xba\x7a\x13\x09\x03\x8a\xa2\x92\xf8\x75\xb1\x2b\xf8\x75\xa1\xa2\x04\xbc\x88\x20\x42\x70\x59\xf6\xcf\xcc\x24\xf9\x19\x72\xfa\x2b\x3d\x3b\xc9\x66\x2e\xa6\xe9\x53\xa7\x4e\x3d\xcf\x79\x9e\x53\x9d\xcb\x68\x57\x26\xc0\x32\xa9\x34\xa5\x2a\xcb\x8d\x75\x8c\x53\xe2\x45\x46\x3b\xd8\x77\x1e\x25\xde\x24\xab\x1e\x89\x72\x3b\xe5\x58\x44\x26\x0b\x1f\xa8\x54\xe9\x57\x56\xff\x7f\x37\x84\xb1\x2c\xe0\xc5\xab\x21\xec\xcb\x2c\x0f\x13\x9b\x47\x61\x6e\x8d\x33\x61\x59\x80\xbd\x61\x4f\x6a\x92\xa4\x49\x32\x26\x49\x41\x24\x26\x95\x3a\x11\xc6\x26\x55\xa5\xeb\x57\xc2\x0c\x9c\x8c\xa5\x93\x98\x92\x9a\x04\x1f\xa6\xc0\x7f\xa7\x32\xf0\xa8\x4f\xa9\xfb\x30\x07\xf6\x7a\xe9\x76\xb6\xc0\x3e\x54\x11\xb0\xc2\xd9\x32\x72\xec\x80\x4e\x29\x9d\x94\x3a\x62\x1b\xb0\xd7\xac\x71\x9f\xdd\xe9\xa7\x1e\x50\x62\xc1\x95\x56\xb3\xdb\xbd\xf0\xc1\x14\xb7\x56\x75\xb7\x0b\xb0\x97\x05\xc9\x30\x66\xf5\x4f\x69\xf7\xf2\x4b\x94\x6c\xc8\x0c\xaa\xf7\xc2\x59\xa5\x13\x4a\x46\xb2\x28\xf6\x8c\x8d\xdb\x40\x0b\x81\xf7\x8f\xf5\xd9\xdb\x26\x51\x9a\x47\x6e\x9f\x35\xca\x88\xb5\xfa\x19\x30\x2d\x33\x08\x58\xbe\x58\xc7\x67\x1c\x91\x04\x0c\xac\x35\xd6\xef\xe1\xc6\xf0\x01\x25\x64\x18\x0f\x1a\x68\xab\x01\x25\x15\xb0\x3a\x50\xd5\xa3\xa4\x43\x36\xe8\x6a\x07\x94\x4c\x03\xa6\x55\xda\xb1\x45\x8c\x6b\x69\x9f\x30\x8a\x2b\xb6\xb5\xca\xf2\x14\x32\xd0\x0e\xe2\x1e\x0f\x7c\x80\xed\x38\x3e\x94\xa9\x8a\xa5\x83\x8a\xdc\x26\x7c\x50\x42\xe1\xb8\xd2\xec\x4e\x55\xa4\x1f\xf5\x6b\x1e\x3d\x1a\x0d\x8a\x56\xae\x06\x48\x2b\x17\x62\x7a\x4e\xaa\xb5\xd4\xd6\x32\xd5\xed\x95\x2d\xf6\x17\xf6\xf6\x1a\x30\x7c\x21\x58\xe4\x46\x17\xd0\x6f\xb5\x9a\xe0\x0b\x1b\xdc\xbb\x8e\xa2\xff\x6a\x95\xf0\xbf\x7b\xc8\x03\x77\xf4\x68\x55\x85\x28\x99\x52\x52\x4f\x81\x18\xea\x89\xe1\xde\xf9\xf7\x4f\xe6\x4f\x1f\x9f\x7d\xfd\xfb\xfc\x9b\xdf\x2e\x7e\xfd\xf3\xe2\xaf\x4f\xce\x1f\x1d\x33\x5b\x97\xbc\xaf\x62\x36\x60\xb7\x0a\x2f\x60\x91\xdb\x17\xef\xc9\xb4\x04\xee\xc1\x78\x05\x47\x62\xa5\x49\x5a\x51\xb1\xe7\xfb\x94\x64\x26\x86\xb4\x6c\xdd\x81\x28\xfb\x7e\x17\x5d\x3b\x90\xbe\x40\xbb\xd4\x0e\x53\x5a\xb4\x96\xf0\x3b\x8a\x37\x30\x68\x05\x58\x6e\x17\xee\xc0\xda\x83\x66\xb1\xb5\x65\xe3\xcb\x0e\xa3\x18\xa2\xed\x5a\x7f\x5e\x86\x37\x1a\x97\x4e\x17\x4c\xb9\xa4\xed\x26\x24\xaa\x70\x60\x6f\x90\xb7\x4d\x7b\x5e\xe1\xcb\xf8\xb2\xc8\xb9\xd4\x2a\xe2\x5e\xe7\x74\x96\x81\xe7\x23\x88\x30\x9c\x3d\x7d\x76\xfe\xe8\x38\x31\xcc\x96\xba\xba\x5b\x45\x62\x18\x9b\x7f\x7b\x32\x3f\x3c\x3e\xfb\xe7\xe8\xe2\xe4\xf1\xd9\x4f\x5f\xcd\x0f\x7f\xa9\xf1\x62\x02\x6f\x4a\xba\x9d\x80\xdd\x47\x49\x4c\x21\xd6\xc1\xed\xc5\xdc\xa7\xa4\xba\x13\xc5\x16\xb8\x91\x35\x0f\x20\x72\x23\xe9\x76\x38\xe6\x76\x6b\x43\xad\x5c\x9d\x89\x7b\xeb\xd8\x3a\xb8\xb7\xc6\x43\x5d\x38\xa9\x51\x57\x4a\x8a\x4e\x6f\x18\xe3\xea\xba\xcd\xa3\x7a\x22\xf9\x95\x82\xd6\x04\xc1\x5a\xbf\xd2\x32\x0c\xcf\xfe\x3e\x9e\x7f\xf6\x65\x33\xe3\x6d\x6b\x96\xc6\x9b\x17\xc1\xc2\x44\xfa\xb4\xda\x5b\xd1\x9e\x9d\x7e\x34\x3b\x3d\xa2\x24\x31\x0c\xa9\xf3\xea\x7b\xa3\xb4\xab\xd8\x13\xbc\xa1\xc5\x56\x0a\x90\xf3\xbb\x3e\x0b\xc3\xd9\xb3\x9f\x2f\x4e\x3e\xae\x5b\x55\x37\x8f\x12\x12\x45\x1d\x0d\x34\xb7\x78\x53\xc9\x94\x4f\x32\x27\xb6\x72\xab\xb4\x9b\x70\x6f\x70\x2b\xf6\x02\x86\xa5\xfd\xa0\xce\x79\x5f\xb9\x9d\xa1\x2e\x20\x2a\x2d\x20\x20\x72\x05\xdb\x05\xba\x64\x4a\xf1\xa8\x54\xe1\x31\xb5\xdf\x6a\x46\x0d\xd3\xb5\x54\x81\x76\x3c\x8a\x90\x1c\xc9\x62\x4c\x6b\x3f\x3c\x62\x24\x95\x2d\xae\x9c\xbe\x80\x79\x0e\x0a\xb7\xea\xe1\x11\x61\xc8\xe6\x5f\xfc\x38\x7f\xf2\xef\xfc\xf4\x8f\x76\xef\xf9\x0f\x9f\xce\x4e\x0f\x67\xa7\x47\x67\xdf\x7d\x8e\x00\xf6\xdd\x42\xe5\x0d\xd8\x7b\xa7\x74\x89\x51\x3a\x69\x3c\xcc\x5b\x4f\xbf\x21\xa3\xdd\xc4\x9a\x52\xc7\xdc\x0f\x58\x86\x23\x8a\xf7\x87\xd2\x5d\xb7\xa2\x54\xb5\xb3\x8d\xde\xbf\xbd\x74\xaf\x1d\xb4\xb3\x3e\x60\x9e\x8c\x33\xa5\xbd\x80\x5d\x7e\x04\x9a\xd0\xf4\x9a\xee\xd5\x93\x5e\x75\xae\x3a\x58\x8c\x50\x8d\x54\x73\x6f\xe5\x35\x2f\x60\x15\x14\xf1\xae\xd9\x05\xdd\xbe\x6c\x37\xd3\xdd\x7f\xc5\xa9\x46\xb7\x71\x18\xe3\x94\x4e\x54\x22\x2e\x5d\x2a\x46\x28\x29\x45\x97\x8b\xcd\x52\x73\x1c\xb6\xff\x02\x00\x00\xff\xff\x67\x10\xcc\x27\xc1\x08\x00\x00")

func templatesGrpcMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGrpcMainGo,
		"templates/GRPC/main.go",
	)
}

func templatesGrpcMainGo() (*asset, error) {
	bytes, err := templatesGrpcMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/GRPC/main.go", size: 2241, mode: os.FileMode(420), modTime: time.Unix(1712817375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGrpcProtoAuthProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x4e\x03\x31\x10\x84\x7b\x3f\xc5\xc8\x55\xd2\x04\x11\x4a\xcb\x05\x3d\x55\x10\x35\x3a\x1d\x2b\x63\x45\xe7\x35\xbb\x7b\xfc\x08\xe5\xdd\x91\x2f\x77\x10\xe0\x1a\x6b\x3d\xeb\xf9\x66\xac\x1f\xc5\xba\x77\x44\xf8\x2a\x6c\x7c\xe3\x83\xab\x5d\x7f\xec\x12\x61\x12\x82\xe3\x6a\x99\x0b\x12\x3f\x2e\x8b\xe8\x77\x57\xa3\x92\xf8\xe0\xf2\x50\x59\x0c\xbe\x5d\x77\x93\xc1\x07\xa7\x24\xaf\xb9\x27\xdc\x8e\xf6\x7c\x3f\xcf\x9f\x0e\x90\xda\xe3\x8e\x53\x2e\x9b\xe9\x3c\xd0\xcb\x48\x6a\x5b\x08\xd9\x28\x45\xb1\xc8\x5a\xb9\x28\x6d\xc3\x6c\x39\x50\xca\x6a\x24\x9b\x65\xf8\x6f\xfc\xd9\x7c\x7b\x4f\xce\x0d\xa4\xda\xfa\x5e\xa6\xb5\x1e\x50\x93\x5c\x12\x5a\xe9\xd2\x0d\x84\x78\x8d\x70\xa1\xd7\x4e\xf5\x8d\xe5\x09\x71\x8f\x35\xd0\x39\xa3\x91\x1e\x94\x64\xc2\x20\xe2\xcc\x98\x11\x30\x3e\x52\x41\xc4\xfe\x17\xe0\xcf\x0f\xd6\x10\xab\xaf\x97\xc4\x93\xfb\x0a\x00\x00\xff\xff\x3f\xfd\xfb\xac\xb0\x01\x00\x00")

func templatesGrpcProtoAuthProtoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGrpcProtoAuthProto,
		"templates/GRPC/proto/auth.proto",
	)
}

func templatesGrpcProtoAuthProto() (*asset, error) {
	bytes, err := templatesGrpcProtoAuthProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/GRPC/proto/auth.proto", size: 432, mode: os.FileMode(420), modTime: time.Unix(1712817375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGrpcProtoUserAuthPbGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x5d\x6f\xdb\x38\xd6\xbe\x96\x7e\xc5\x19\x5f\x14\x52\xe1\x48\xb2\xfc\xd1\x8e\x5e\xf8\x05\x76\x9b\x4c\x11\x60\x76\x12\x24\xed\x60\xb1\x41\x90\x51\x64\xca\xe1\xc6\xa6\xb4\x22\x95\xda\x6b\xf8\xbf\x2f\x48\x4a\x16\xf5\x69\xbb\xf1\x74\x66\xd0\x5e\xb0\x32\x79\xbe\xf8\x1c\x9e\xc7\x47\x74\x6c\x1b\x3e\x44\x33\x04\x73\x44\x50\xe2\x33\x34\x83\xc7\x35\xc4\x49\xc4\xa2\xe0\x6c\x8e\xc8\xd9\x3c\xb2\xe0\xfc\x0a\x7e\xb9\xfa\x04\x17\xe7\x97\x9f\x2c\xdd\xb6\xe1\x05\x25\x14\x47\x84\x7a\xfc\x83\x56\x12\x86\x97\x81\x35\x74\x2c\x47\x59\x81\xec\xdf\xcb\xc8\x72\x5d\x6b\xc4\x57\x68\x94\x26\x01\xf2\xc0\x4f\xd9\x93\x25\xa4\x74\x3d\xf6\x83\x67\x7f\x8e\x20\xa5\x28\xd1\x75\xbc\x8c\xa3\x84\x81\xa1\x4b\x23\x09\x0a\x17\x28\x60\xd0\x9b\x47\xd1\x7c\x81\xac\x79\xb4\xf0\xc9\xdc\x8a\x92\xb9\x2d\xd6\x1f\xd3\xd0\xce\x64\x6c\x55\xa1\x97\xe9\xe3\x65\xbc\xe8\x56\x4e\x09\xc3\x4b\x64\xef\xa4\x7b\xba\xb6\x73\x5a\x18\xa3\x6b\x12\x40\x8f\x8f\x3d\xdd\xd4\xf5\x20\x22\x54\x04\x69\xdb\xf0\x2b\x4a\x70\xb8\x06\xf6\xe4\x33\x60\x4f\x98\x2a\x88\x06\x1c\x60\x4c\x81\xa6\x61\x88\x03\x8c\x08\x5b\xac\x21\x8d\xcf\x58\x74\x36\xf3\x19\xb2\x74\xed\x01\xa6\xb0\x73\x6d\x5d\x90\x30\x4a\x02\xf4\xab\x84\xd9\x70\x1d\x38\x53\x56\xff\x81\x49\xb6\x62\xd6\x1c\xd7\xb6\xf1\x0a\xb7\x8a\x47\x7f\x95\x4d\xc2\x19\xb8\x8e\xc9\xb7\xce\xd6\x31\x82\x9f\xa3\x39\x26\x37\xe8\x3f\x29\xa2\x0c\x28\x4b\xd2\x80\xc1\x46\xd7\x28\xf3\x19\xca\xd3\xae\x46\x8e\x28\xf5\xe7\xe8\x96\x2f\xeb\x1a\xc5\xff\x45\x1f\xfc\xe0\x09\x55\xa4\x6e\xf3\x79\x5d\x4b\xc9\x33\x89\xbe\x90\x9f\x30\x5a\xcc\xa8\x22\xf2\x59\x9d\xd7\x75\xed\x33\x45\x09\xf1\x97\x88\xc7\x80\xc9\x1c\x7e\xcb\xf3\xea\xf5\x1e\xd7\x0c\xd1\xfe\xa0\x1f\xc5\xac\xcf\x45\xa6\x69\x26\xdb\x17\x32\xc3\x1e\xfc\x9b\x46\xc4\xeb\xed\xa6\xa3\x25\x66\x68\x19\xb3\x75\xef\x37\x5d\xbb\xf6\x29\xfd\x12\x25\xb3\x56\xc3\x6e\x61\x38\xce\x64\x2b\x86\x77\xd3\xaa\xe1\xad\xae\x87\x29\x09\xc0\x58\xc1\x5b\x15\x44\x13\x6e\x10\x45\xcc\x30\x39\x8c\x6f\x57\x30\x2d\x41\xbc\xd9\xea\x1a\x0e\x4b\x38\x50\x3f\x44\x17\xc4\x7f\x5c\xa0\x19\x57\xd1\x96\x18\xbc\x29\xbc\x09\xf1\x02\x3d\xf0\xea\x7a\x10\xc2\x0f\x4b\x3a\xff\xb4\x8e\x11\xbd\x73\xee\xb9\x10\xe5\x42\x85\x99\x7f\x96\x32\x73\x15\x2a\xa9\xbf\x8e\x30\x61\x28\x31\x56\xa6\x29\x14\xad\x5b\x5e\x5b\x99\xf8\x25\x09\x23\x63\x89\x4d\x5d\xdb\x76\xec\xe8\x56\x40\x67\x98\x39\x86\x1b\x5e\x59\x2c\x4d\x48\x73\x04\x5c\xe6\x2a\x34\x56\x66\x61\xb2\x62\xf0\x9a\xab\x65\xf2\x1c\xa9\x76\xd7\x42\xf2\x46\x56\xaf\x61\x82\xca\x0c\xb9\x43\x1e\xce\x21\xa0\x75\xe0\xfe\xe6\x0d\xac\xe0\x87\x29\x10\xbc\x90\x39\xf8\x5a\x78\x71\x08\x4b\x6a\xfd\x1c\xf9\x33\x15\x60\x13\xa6\x85\xed\xf6\x14\x68\x5b\x5d\xcb\x81\x5d\x52\x9e\x92\xdd\x27\x9c\x07\xb0\xc3\xd5\xb6\xe1\x1c\xc5\x09\x0a\x38\x3f\x79\xf0\x99\x96\x6b\xd9\x52\x81\xb3\xce\x11\x0d\x12\x1c\xb3\x28\x01\x4c\x28\x43\xfe\xcc\x6a\x4e\x4c\x21\x68\x98\x60\xdc\xdd\xf3\x12\xe9\xc3\xdd\x3d\x26\xcc\x54\xd2\x5e\xc5\x39\xf1\xbf\x70\xcd\x8f\xff\xba\xbc\x36\xcc\x4c\x7e\xe3\x74\x1d\xa9\x8f\x88\xe5\x25\x5f\x3a\x57\x38\x2c\x67\x22\x73\xb8\xb2\x72\x69\x15\x96\x5e\xaf\xdb\x43\x5e\xfb\x87\x79\xc8\xa5\xeb\x1e\x54\xa6\xa4\x71\x44\x28\xfa\xa3\xa9\x12\xe0\xad\xfc\x6f\x1f\x4f\x36\x70\x64\x99\x1f\x3f\x45\xcf\x88\x1c\x42\x8e\x8c\x0b\x56\xcc\xc9\xb9\x3d\xb4\x28\x11\x6b\xe5\x45\xb9\x7c\x02\x62\x1c\x7c\x43\x62\xcc\xf7\x74\x3a\x66\xcc\x2d\x1e\x40\x8d\x25\xd1\xd7\x73\xe3\xe0\x3b\xe2\x46\x09\xdd\xb1\xe4\x98\x03\x7e\x4a\x76\x1c\x74\x9e\xab\x8c\x1e\x0d\x33\xab\xf3\x7d\xcc\xa8\x02\x42\xf0\x62\x8f\x69\x51\xf3\x87\x91\xa2\x10\x6d\x61\xc4\x1b\x34\xc7\x94\xa1\xe4\x4f\xd2\x3e\x66\x50\xbd\x96\x11\x55\xe8\x2a\x3b\xac\x73\x58\x45\xe0\x04\x2c\xe6\x7e\x0b\x16\xab\xed\xeb\x04\x3c\x56\xb3\xd9\xc5\x64\xcd\xc2\xaf\xe7\x32\xf7\x7b\xe0\xb2\x0a\x78\x07\xb3\x59\x0d\xf4\x53\xf2\x99\xbb\xe7\x84\x9d\x80\xd1\x2a\xa4\xf3\x47\x77\x62\xcd\xdb\x6d\xeb\x76\xaa\x12\x27\xa0\x8a\xe1\xb7\xa5\x8a\x13\xf6\x3c\x75\xa3\x87\x91\xc5\x89\x3b\x9f\xe1\xf7\xc5\x16\x47\x36\x3f\x75\xd8\x4f\xc9\x17\x43\x71\xcc\x5e\xfc\x04\x7e\x2a\x8b\x97\xb3\xc9\x17\x0b\xb7\x52\xa1\xc5\x3e\x4c\x41\x86\xb4\xd1\x35\x67\xe5\xf8\x7d\xc8\xc7\xc9\x80\x8f\xef\xc6\x62\x1c\x89\x99\xf7\x7c\x74\x91\x98\x71\xc4\xe8\x8a\xf9\x50\x91\x11\xcf\x03\x31\xef\x8c\x4b\x92\xdc\x41\x83\xa8\xe2\x32\x73\x36\x14\xab\xe3\xc2\xc1\x21\x2e\x5d\xe9\x60\x34\x29\xcc\x39\x01\x1f\x47\x41\x21\x34\x79\x27\xc6\x1f\xc5\x28\x8c\x8e\x5d\xc5\x99\xb2\xe3\x89\x12\x8a\x74\x33\x90\x0e\xd4\x78\x9d\xf7\x5d\x51\x4b\x07\x12\xc6\xc9\xac\x58\x1d\x08\x2d\x47\xcc\xbb\x8e\xf2\xfc\x5e\x38\x70\x7e\x2c\xe2\xfa\x4a\x07\x6e\x15\xd8\xcc\x8e\x23\x73\x30\x50\xb6\x26\xc7\x77\x0a\xa6\xd2\xf4\x48\x89\xd4\x6d\x88\x14\x1a\x03\x3d\xd6\x81\x2b\x9e\x4b\x39\x9b\xed\xc9\x19\x77\x50\x4a\xda\xb0\x38\x1b\x99\x02\xaa\xc2\x95\x01\x12\x2a\x6e\x46\xad\xc0\x8a\x24\xb7\xa7\x88\x3f\x3f\xf2\x71\xe8\x16\xcf\x07\x1d\x50\x79\xde\xc6\xc2\x41\x3d\x99\x19\x8e\xed\x71\x15\xfb\x18\x29\xfb\x18\x57\xdd\x4c\x1e\x65\x0e\xc6\x05\x14\x47\xa4\xb1\xc9\x1c\x94\xad\x65\x85\x96\x6d\x5f\x46\x11\xf6\x2b\xa5\xa4\x26\x4d\x2d\xa2\xfa\x8e\x1b\x4b\xaf\x80\x68\x57\x7b\x87\x27\xb0\xbb\xc4\x64\xce\x94\x1d\x1c\x9f\xc0\x46\x97\x95\xfc\x35\x27\xd9\x55\xd2\x28\xf7\x31\x70\xbe\x12\xba\x22\xc9\x87\x54\x80\xdc\xeb\x3b\xa4\x00\x28\xf6\x3d\x6a\x21\xf9\xf1\x50\x75\x20\x95\x27\x45\x5c\x93\x5a\x71\x95\x8e\x83\x98\xef\xe6\xdd\x9c\x4d\x87\xc7\xa1\x7f\x14\x99\x8b\x1c\xb4\xb1\xb9\x44\x7f\xf4\x2a\xf7\x02\xa2\x36\xff\x07\xf3\xd2\xf0\xb1\x5f\x21\xea\x9d\x1d\xe1\xe0\x80\xf3\x90\xd5\xc7\xe4\xc8\xa3\xac\x9e\xa2\x57\x56\x6c\x33\xbc\x12\xa2\xa3\x22\xfa\x7d\xeb\x60\xa4\x7c\x5b\x8d\x25\xe2\x0a\x68\x6e\xd8\xaf\x93\x8a\x38\x45\x32\x2e\xb7\x50\xe8\xde\xcd\x70\xd8\xcf\x1b\x35\x43\xd7\x5a\x5a\xaf\x2b\x12\x20\xa0\x6b\x12\x58\xfc\xa9\x55\xec\xdc\x67\x3e\x4c\xdb\xfa\x37\xdd\xcc\x7a\xfe\xce\xfe\x31\xeb\xf1\x78\xbb\xd9\x11\x8c\x75\x1e\x19\xdc\x96\x7c\x01\xdb\x13\x8f\xda\xd1\x7f\x88\x96\x71\x82\x28\x15\xce\x3a\xd4\xf8\x7b\x92\xb9\xaf\xe3\xe5\x82\x39\x78\x6d\x2f\x21\x30\x85\xa5\xff\x8c\x8c\xbb\xfb\xda\x0b\x2b\x7f\x07\xe8\xc3\xc8\x6c\xd4\x9f\x47\xb9\xba\xe8\xa7\x51\x12\xfa\x01\xda\x6c\x37\xba\x56\xf9\x4d\xc7\x20\x78\x61\xf6\xc5\xcb\xae\x6d\x83\xe3\xc9\xed\x5a\xaa\x8c\xa2\x93\xb5\xfa\x85\x92\x6d\xc3\xa0\xa2\x23\x65\xb8\x52\xf5\x2d\x3f\x57\xb3\x6d\x70\x73\xa5\x8a\x4c\x59\xad\xec\xce\xb6\x61\x58\x57\x2b\xdc\x7d\xa6\x28\x51\xf7\x93\xff\xb3\x6d\x18\xe5\x7a\xe2\xee\x60\xdb\x08\xd9\x0c\xc5\x97\xb3\xd5\x0e\xb2\xa1\xbb\xd1\xb5\x51\xbf\x09\x95\xec\x4d\x29\xa5\x28\xf1\xd8\x3a\x46\x0f\xe2\xa7\xe9\xb3\xff\x57\x7d\x64\xaa\x83\x96\x7d\xee\x51\x76\xfa\x25\x90\xfe\x96\xb2\xa7\x5b\x94\xbc\xe0\x00\xc9\x18\x3c\x4c\xe2\x94\x3d\x88\x2b\x8f\x9d\x6a\x39\x67\x6e\x19\x30\xd5\x44\x1e\x4b\xa3\x95\x5a\x42\x06\xfd\x12\x82\xf5\x58\xa2\x94\xb5\x06\x93\x67\x67\x28\x8c\x8c\x3b\xa3\x69\xb4\x53\x4f\xb4\x04\xf6\x6e\xe4\x4d\xee\x01\x53\x60\x4f\x08\x68\xfa\x78\xb6\xc0\x94\x41\x18\x25\xb0\x44\xec\x29\x9a\x81\x62\x2d\x07\xe3\xce\xf5\x46\x9d\x3a\x05\x1e\x8a\x8a\xdb\xac\x82\x56\x0c\x11\xf1\x27\x13\xbb\x2c\x1e\xa3\x24\x9e\x66\x08\xe5\xb9\xbe\x73\xda\x74\x42\x8c\x16\x33\xc5\x49\x7e\xf7\x81\x09\x16\x37\x48\xb5\x83\x9c\x2d\x6c\x9b\xe9\x32\x57\x13\x77\x1b\xd5\x97\xeb\xda\x75\x9b\xb8\x50\x10\x26\xf8\x81\x2d\x99\x10\x06\x7e\xe8\xba\xa1\xea\xf8\xbd\xdd\xba\x58\xc5\x51\xc2\x50\xc2\x09\x9f\x33\xf1\x0b\x28\x34\xd5\x07\x0c\xe2\xd6\x40\x99\x93\xf7\x20\xf4\x0b\x66\xc1\x13\xbc\x80\x37\x85\x17\xab\xc2\x65\xff\x07\x58\x4a\x05\x3e\x45\xe0\x78\xfc\x31\xe7\xe0\x37\x2f\x16\x95\x37\x7c\xd9\xf2\xa0\xb6\x5c\xdc\xf0\x65\x22\x6e\x55\xa4\x74\xf3\xc7\xd7\x66\x28\xf4\xd3\x05\x2b\xc9\x11\xbc\xe0\x1f\xb7\xd9\xdd\x4c\xc7\x0f\x6b\x27\x06\x21\x63\xcb\xbf\x16\x0a\xee\xc9\x50\xa8\x7e\xdb\xfc\xb5\x70\x18\xfe\x0e\x38\xfc\x89\x0f\xc4\x56\xd7\x04\xcf\xaf\xb2\x0b\xfa\xcd\x56\xd7\xa2\x94\x95\x6f\x50\x39\x32\x7f\x4f\xf1\x62\x86\x12\x1e\x3f\x27\x2b\x4f\x59\xe6\x3d\x94\xb2\xac\x7d\x8c\xae\xe5\x9f\x18\x5e\xfb\xec\xc9\x83\xfc\x8e\x90\x5b\xb9\x0a\x8d\xd5\x66\x6b\x5a\xd7\xcf\x73\xbe\x68\x98\x7d\xae\x70\x23\xfb\x30\x79\x79\xe8\xb5\xb5\x69\x42\xf4\x97\x74\x79\x41\xd2\x25\xf5\x64\x4b\xe1\xe4\x93\x59\x2f\x26\xe6\x47\x3b\xc9\x9c\xe5\xa9\x57\x48\x66\x5f\x77\x42\x92\xbf\xb1\x69\x5b\x3e\x7c\x94\x7d\x9a\xa7\xb4\x2b\x2d\xad\x1c\x97\x3e\x47\x31\xff\xd2\x20\xc1\xfa\x92\xcc\xd0\x8a\xeb\xb5\x74\x31\x5c\x5a\xe9\x13\x73\x07\x6d\xc7\xaf\xaf\x6b\x5b\x4b\x60\xc9\x79\xbd\xfa\xad\x30\xe5\x5f\xa6\xe2\xae\xb5\xb5\xab\x86\xa9\x4c\x70\x7b\x1f\xda\xb8\x5c\xf4\x5c\xf2\x47\x9c\xff\x05\x00\x00\xff\xff\x75\x51\xc7\xde\xad\x2a\x00\x00")

func templatesGrpcProtoUserAuthPbGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGrpcProtoUserAuthPbGo,
		"templates/GRPC/proto/user/auth.pb.go",
	)
}

func templatesGrpcProtoUserAuthPbGo() (*asset, error) {
	bytes, err := templatesGrpcProtoUserAuthPbGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/GRPC/proto/user/auth.pb.go", size: 10925, mode: os.FileMode(420), modTime: time.Unix(1712817375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGrpcProtoUserAuth_grpcPbGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x7f\x6f\xdb\x36\x10\xfd\x5b\xfa\x14\x37\x0f\xe8\xa4\x42\xa1\xbb\xac\xc0\x00\x0f\xc1\x50\xa4\xed\x16\x60\x4b\x83\x34\xdd\x3f\xc3\x10\x30\xd4\x49\x26\x2a\x91\x2a\x49\x39\x35\x82\x7c\xf7\xe1\x48\xc9\x96\x2d\xdb\x4d\x7f\x6e\x06\x0c\x59\xe2\xf1\xee\xde\xbb\xc7\x23\xe5\xe9\x14\x4e\x75\x8e\x50\xa2\x42\xc3\x1d\xe6\x70\xb3\x84\xc6\x68\xa7\xc5\x51\x89\xea\xa8\xd4\x47\xa5\x69\x04\x83\xe7\xaf\xe0\xfc\xd5\x15\xbc\x78\x7e\x76\xc5\xe2\xe9\x14\x16\x68\xac\xd4\xca\xce\xe8\xe6\x68\xc7\x14\x58\xfc\xc8\x8e\xd9\x93\xe1\x30\x0c\x3f\x8b\xa7\xec\xf8\x98\x3d\xa5\x71\xab\x5b\x23\x70\x06\xbc\x75\x73\xe6\x4d\xe3\xb8\xe1\xe2\x2d\x2f\x11\x5a\x8b\x26\x8e\x65\xdd\x68\xe3\x20\x89\x23\xa1\x95\xc3\xf7\x0e\x26\xdd\x8f\x49\x1c\xf9\x68\x93\x52\xeb\xb2\x42\x56\xea\x8a\xab\x92\x69\x53\x4e\xe9\xf9\x84\x66\xe4\x68\xf7\x8d\x4f\xfd\xe8\x24\x8e\xac\xe3\xae\xdd\x6f\x16\x86\x27\x71\x1a\x53\xc2\x57\x73\x69\x41\x5a\xe0\x20\x74\xdd\xc8\x0a\x8f\x9c\xac\x11\xb8\xb5\x68\x9c\xd4\x0a\x9c\x06\x54\xb6\x35\x08\x6e\xce\x1d\x38\xb2\x5f\x53\x5c\xc8\x0a\xc9\x8d\xb4\x7e\x3e\x77\xf2\xa6\x42\xb8\x95\x6e\x0e\x6e\x8e\xe0\xf1\xf4\xf8\xa5\x23\xb3\x1b\x94\xaa\xec\x83\xe5\xc0\x4b\x2e\x95\x75\xbe\x10\x97\xf8\xae\x95\x06\x2d\x94\x97\x17\xa7\x47\xbf\x69\xe2\xfd\xa7\x63\xf6\x04\xb4\x81\x8a\x3b\x34\x2c\x16\x5a\x59\x07\xd7\x70\xe2\x5d\xb3\xd7\x6d\x43\x6c\x5e\x84\x08\x67\xf6\xaf\x50\xca\x9f\x3d\xb4\x67\xad\x9b\xbf\x46\xb3\x90\x02\x4f\x2b\x89\xca\x87\xa7\xac\x44\xb8\x7b\x76\x71\x06\x85\x36\x43\x3b\xb0\xe1\x4a\xe9\x90\x8b\x97\xda\x80\xc5\x9a\x2b\x27\x85\x05\x6e\x74\xab\x72\x10\xee\x3d\xd5\x12\x38\xfd\xae\xb4\x95\xaa\x9c\xa2\xca\x09\x96\x75\x06\x79\x4d\xbf\x2e\x2f\x4e\x6d\x06\x4d\x85\xdc\x22\x18\x2c\xd0\x10\x93\x73\xe7\x1a\x3b\x9b\x4e\x9b\xb7\x25\x2b\x35\xcb\x71\x31\xdd\x53\xa5\x5f\x1d\xbf\x39\xc9\xb5\xf8\x3e\xa4\x7e\xaa\x95\x62\xe7\x78\xfb\xda\x07\x60\xb1\x5b\x36\xb8\x0b\xa0\x72\x68\x0a\x2e\x10\xee\xe2\xe8\x0f\x5d\x4a\x95\x50\xb6\x9d\xc0\xd8\x69\xb8\x66\x20\x15\x3c\xf6\xc3\x44\x39\x5a\x97\x81\x6e\x9c\x05\xc6\x98\xa7\xf5\x94\x57\xd5\xab\x86\xca\x9f\x42\xd2\x1b\xda\x46\x2b\x8b\x19\xa0\x31\xda\xa4\x71\x74\x89\xa5\xb4\x0e\xcd\xfe\x08\xbd\xc5\x43\x82\xac\x6d\xb7\xe2\xdc\xc7\x01\x2c\x1f\x81\xb5\xce\xb4\xc2\x11\x52\x21\x82\x1c\xd6\x5c\x9d\xf5\x44\xd0\xfc\xa2\x55\x02\xce\xf1\x76\xc4\x57\x72\x60\x62\xba\x83\xde\xbb\x38\x32\xe8\x5a\xa3\xe0\xd1\x28\x9d\x3b\x21\xee\x57\xc1\x12\x01\x8f\x47\x16\x29\x7c\xd5\x8a\x50\x76\xba\x75\x30\x3b\x01\x85\xb7\xc9\x86\x4d\x1a\x47\x68\x0c\x0d\x09\x26\x04\x3b\x53\x0b\xfd\x16\x29\x91\x0c\x26\x53\xdf\xa6\xd8\x00\xed\xd4\xcf\x9d\x50\x52\x19\xe8\xb6\xcb\x85\x31\x96\xc6\x91\x2c\x28\x1c\x7c\x77\x02\x4a\x56\x14\xb2\x67\x44\xc9\xca\x67\x12\x47\xf7\x2b\x96\xfc\x5c\x25\xab\x0f\xf1\xf2\x6d\xa4\xb4\x45\xd0\xb6\xd9\x47\x72\xd4\x4f\xff\xc2\x34\x6d\xf6\x2d\xba\xa0\xe9\xfb\x96\x0d\x77\x1f\xe8\x5b\xf0\xac\xaa\x40\xd6\x4d\x85\x35\x2a\xc7\x89\x15\x0b\x75\x6b\x1d\x60\x7d\x83\x39\xbc\x51\xab\x41\xcc\x47\xb1\xc8\x01\x39\x2f\xb4\xb9\xe5\x26\x5f\x75\x75\x59\x49\xb7\x1c\xb5\x9d\x3e\xbf\x1d\x6d\x67\xbb\x8a\x1b\xea\x7e\x50\x5b\x19\x79\xd8\x12\xc1\xc1\xb6\x11\x11\xe2\x17\x04\xf8\x30\xde\x24\xed\x58\x3f\x6c\x16\x08\xbc\xc1\xc0\x61\x8e\xb9\xef\xe6\x7c\x81\x23\xa2\x2a\xdc\x26\xbf\xeb\xd6\x1f\x08\xb0\xea\x66\xab\xb5\x72\x78\xc2\xaa\x9b\x7c\x1a\xd1\x83\x5e\xe6\x25\x19\x4e\x05\xec\x05\x0d\x16\x89\x3f\x4a\xb0\x8d\x04\x32\x98\xd4\xe8\xe6\x3a\x0f\x71\x41\x69\x07\x83\xe1\x09\xf1\xf8\xb0\xbc\xbf\x4c\x85\x3f\x03\x40\xef\xf2\x33\x30\x3c\x58\x5d\x70\xd7\xcb\xcb\xf2\x02\x77\xe8\x8a\x2f\xb7\x65\xa5\x1b\x47\x2d\x01\x74\xb1\x7b\x15\xfa\xf5\xe9\xcf\x61\xc3\x55\xff\xc6\x22\xcd\xf0\xcf\xd7\xeb\x51\x5a\x0f\xd2\xa0\xd0\x75\x8d\x2a\x27\x1a\xb8\x05\xee\x63\x05\x3a\x2c\xc5\x1c\x27\x76\x2b\xab\x8a\xfc\x1a\xb4\x6d\x45\x27\x8b\xee\xcc\xe6\x35\x1d\x6a\xb0\x56\xf6\x6e\x6c\x1b\x6d\xe1\xa3\xd6\xa3\x2f\x42\x5f\xa6\xb1\x8d\xed\x4e\x7f\xe1\x61\xb0\x33\xdc\x64\x60\xcd\x62\x0c\xc5\x4b\xc5\xb2\xde\x5d\x37\x96\x3c\x1a\x18\x5e\x77\xd7\xe7\x68\x85\xf7\xb2\xce\xe2\x7a\x68\xe6\xa5\x7f\xfd\x3b\x57\x79\x45\x69\x98\xc5\x1a\xe3\xdd\x7d\x06\x3b\xb7\xaf\x1c\x05\x90\xa7\x64\x60\x9a\x06\x02\xb3\x30\x5d\x60\xe3\xb4\x09\x98\xde\x28\x6e\x96\x21\xef\xb3\xf5\x58\x0a\xc9\x46\xa0\xf5\x12\x90\x6a\x6b\xc3\x0f\x0b\x67\xb5\x03\xcd\x4e\x28\x81\x44\xaa\xf4\x97\x87\xec\x48\xb2\xd8\x48\xe9\x64\x64\x6d\xcd\x82\x25\x63\x8a\xd9\xea\x68\x43\x98\xd2\xe0\x4b\x15\x9a\xe2\x3f\x1a\x03\x2b\x34\xb9\x0c\x77\x33\xff\x0e\x65\xcd\x22\x8b\xa3\xe8\x65\x5b\x55\x7f\x7a\x59\xce\x0e\x9d\x4c\xbc\xff\x79\x28\x03\x85\xf0\xfc\xee\x64\xdf\xe0\x3b\xd8\x20\x7e\x1f\x91\x1f\x01\xd0\xe0\x3b\x96\x6c\xb6\xd9\x74\xb8\x9f\x0f\x18\xec\x19\xa1\x6f\xa1\x33\xe8\x72\xde\x23\xaf\x5e\xa2\xff\x53\x85\x6d\x77\xe7\x6f\x2e\xb2\xe1\x39\xf1\xeb\xea\x6c\x7d\xba\xfb\x0f\xa4\xb6\x09\x33\xa8\x6d\x9b\xfb\x4f\x11\xdc\xe6\xd9\x72\xd8\xf3\xfa\x13\xe6\xb0\xad\xfa\xe7\x87\xce\x99\x67\xee\x07\x0b\x5a\x55\x4b\x1f\x9f\xf6\x16\x6f\x9e\x4b\x83\xc2\xf9\x37\x64\xff\x3f\x80\xf7\xb9\xd5\x7c\x33\x9a\x4f\xef\xcf\xb4\x39\x39\x4d\x3b\xa0\x54\xce\x68\xdb\xa0\x70\x98\xd3\x0b\x7f\xad\x73\x59\x48\xcc\x21\xc1\x05\x2a\xbf\x69\x81\xd0\xcd\x32\x8d\x17\xdc\xec\xc5\x71\x32\x82\x70\x17\x47\xdd\xdd\x39\xaf\x71\x06\x93\x51\xb1\xa9\xc6\xdd\x82\xbb\x5a\x36\x38\x83\xe4\xf1\xb8\x28\x89\x92\x55\x9a\xc5\x51\x10\x8d\x9d\xc1\xdf\xff\xf8\x48\xe1\xbe\x0b\x14\xd1\xb7\x33\xe9\xa2\xad\x1a\x56\xd4\xc7\xf0\x3a\xdc\xbf\xab\x90\xe9\x7d\xb6\xd3\xd7\x50\x94\x07\xdc\x6d\x77\x91\xde\x23\x7d\xc3\xff\x07\x76\x06\x7d\xfe\xe1\x81\xcf\xff\x3e\xc0\xe3\x39\x77\x7c\x06\x93\xf5\x5f\x58\x93\x2c\xbe\x8f\xff\x0d\x00\x00\xff\xff\xd7\xc1\xe5\x3d\x5f\x13\x00\x00")

func templatesGrpcProtoUserAuth_grpcPbGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGrpcProtoUserAuth_grpcPbGo,
		"templates/GRPC/proto/user/auth_grpc.pb.go",
	)
}

func templatesGrpcProtoUserAuth_grpcPbGo() (*asset, error) {
	bytes, err := templatesGrpcProtoUserAuth_grpcPbGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/GRPC/proto/user/auth_grpc.pb.go", size: 4959, mode: os.FileMode(420), modTime: time.Unix(1712817375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGrpcProtoUserUserPbGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\x5f\x6f\xe3\xb8\x11\x7f\x96\x3e\xc5\x9c\x1f\x16\xd2\xc1\x91\x65\xd9\xce\x5d\x5d\xf8\xa5\xeb\xdc\xc2\x40\xbb\x09\x36\xbb\x87\xa2\x41\x90\x53\xa4\x91\xc3\xae\x45\xaa\x22\xe5\xd8\x35\xfc\xdd\x8b\x21\x25\x8b\xfe\x7b\xc6\x36\x0f\x84\x3c\xf3\x9b\xf9\x91\xc3\xe1\x70\x98\x5e\x0f\x3e\x8a\x14\x61\x8e\x1c\xcb\x58\x61\x0a\xaf\x6b\x28\x4a\xa1\x44\x72\x33\x47\x7e\x33\x17\x01\x4c\xef\xe1\xf3\xfd\x57\xb8\x9b\xce\xbe\x06\x6e\xaf\x07\x4b\x2c\x25\x13\x5c\x8e\xe9\x87\xb3\x07\x86\x65\x3f\x18\x84\x41\x68\x69\xa0\xfe\x5b\x0e\x83\x28\x0a\x86\xa4\x91\xa2\x2a\x13\x1c\x43\x25\xb1\x0c\x34\xca\x75\x8b\x38\xf9\x1e\xcf\x51\xcb\x5c\x97\xe5\x85\x28\x15\x78\xae\x71\x52\x62\xb6\xc0\x44\x41\x67\x2e\xc4\x7c\x81\xc1\x5c\x2c\x62\x3e\x0f\x44\x39\xef\x69\xfd\x6b\x95\xf5\x6a\x4c\xcf\x36\xe8\xd4\xf6\x2c\x2f\x16\x97\x8d\x2b\xae\x58\x8e\xbd\x1d\xba\xe3\x3a\x3b\xd2\xd6\x99\x5c\xf3\x04\x3a\x34\x76\x5c\xdf\x75\x13\xc1\xa5\x9e\x64\xaf\x07\xbf\x63\xc9\xb2\x35\xa8\xb7\x58\x81\x7a\x63\xd2\x8a\x68\x42\x01\x66\x12\x64\x95\x65\x2c\x61\xc8\xd5\x62\x0d\x55\x71\xa3\xc4\x4d\x1a\x2b\x0c\x5c\xe7\x05\x26\xb0\xa3\x0e\xee\x78\x26\xca\x04\x7f\x37\x61\xf6\xa2\x10\x6e\x2c\xed\x3f\x18\xaf\x35\xfe\x11\xf1\xd1\x32\xfe\x0f\x5a\x8b\x31\x5e\xd5\x42\xb8\x81\x28\xf4\x69\xe9\x6a\x5d\x20\x7c\x93\x58\x82\x54\x65\x95\x28\xd8\xb8\x8e\x54\xb1\xc2\x66\xbb\xed\x19\xa3\x94\xf1\x1c\x1f\x49\xed\x3a\x92\xfd\x17\x3f\xc6\xc9\x1b\x1e\xa0\x1e\x1b\xb9\xeb\x54\xfc\x3b\x17\xef\xfc\x37\x86\x8b\x54\x5a\x90\x6f\xb6\xdc\x75\x9d\xcf\x71\x6e\xbc\x48\x55\x32\x3e\x87\x3f\x9a\xfd\x1c\x77\x5e\xd7\x0a\x65\xb7\xdf\x15\x85\xea\xf2\x38\xc7\x09\x0d\x5d\xad\x1f\x74\xe0\xdf\x52\xf0\x71\x47\x8b\x44\xce\x14\xe6\x85\x5a\x77\xfe\x70\x9d\x59\x5a\x4f\x9e\x71\x35\x88\xc0\x76\xb8\x8c\x4b\xc6\x55\x37\x6a\x3d\xb2\xf4\xc0\x1f\x4b\x6d\x6f\xd0\xeb\xc1\x37\xce\xfe\x53\x21\xcc\xa6\xc0\xab\xfc\x15\x4b\xc8\x44\x69\xb2\xa3\xc0\x52\x0a\x1e\xb8\xce\x5d\x1e\xb3\xc5\xa5\x35\x0c\x5a\x46\x24\xec\x01\xa9\x91\xed\xad\xe2\x21\x96\xf2\x5d\x94\xe9\x59\x97\xc3\xd6\x65\x51\x63\x0f\xbc\xee\xc4\xb6\xe3\xad\xeb\x66\x15\x4f\xc0\x5b\xc1\xcf\xb4\xf5\x3e\x7c\x41\x89\xca\xf3\x69\xf3\x7f\x5e\xc1\x44\x27\xc4\x66\xeb\x3a\x2c\xdb\xdb\x35\x19\x67\x78\xc7\xe3\xd7\x05\xa6\x04\x75\x72\x06\xe3\x09\x7c\xc8\xd8\x02\x5f\xe8\xbc\xbf\x68\xf0\x4b\x2e\xe7\x5f\xd7\x05\xca\xa7\xf0\x99\x40\x92\x40\xad\x9b\x7f\xee\xe5\xd1\x7d\x66\x25\xe8\x83\x60\x5c\x61\xe9\xad\x7c\x5f\x1b\x06\x8f\x54\x01\x6a\xf8\x8c\x67\xc2\xcb\x99\xef\x3a\xdb\x13\x2b\x78\xd4\x21\xf2\xfc\x26\x56\x1b\x3a\xf7\xaa\x2a\xf9\x69\x66\xc2\xdc\x67\xde\xca\x6f\x5d\xd5\x8e\x1e\x08\x5e\xe3\x28\x22\xc7\x54\x1a\xf1\xc5\xd4\x12\xcf\x07\xbb\x4e\x35\x04\x44\x7f\x4d\x70\x2e\xc4\xf7\xc3\x07\x58\xc1\x4f\x13\xe0\x6c\x61\x62\xfd\xa3\x61\x64\x19\xe4\x32\xf8\xbb\x88\x53\x3b\x90\x3e\x4c\x5a\xdf\xe7\x43\xed\x6c\x5d\xa7\x09\x64\x2e\x29\xf4\xbb\x5f\xac\x99\xc0\x2e\x8e\xbd\x1e\x4c\xb1\x28\x31\xa1\x6a\x39\xa6\x24\xd2\x89\x14\xd8\x01\x0b\xa6\x28\x93\x92\x15\x4a\x94\xc0\xb8\x54\x18\xa7\xc1\xfe\x06\xb4\x00\xcf\x07\xef\xe9\x99\x52\xbd\x0b\x4f\xcf\x8c\x2b\xdf\xda\xd6\xc3\xb8\x96\xf1\x3b\x59\x7e\xfa\xd7\xec\xc1\xf3\x6b\xfc\x26\x3c\x95\x2a\x9f\x50\x51\xc1\xd9\xcb\x15\x96\xed\x47\xbb\x26\x59\x05\x84\xb4\x97\xdd\xe9\x9c\xf6\x38\x4b\x3d\xbf\xae\x36\x97\xdc\xcd\x52\xdb\x59\x78\xda\x97\x2e\x25\xd7\x4d\x4f\x43\xaf\x99\x5f\x53\x4b\xae\x73\xdb\xa0\x8f\x3d\x2f\xe3\x12\x7e\xdb\x0f\xfd\xfe\x09\x20\x65\xbb\x85\xc6\xe0\xcc\x5e\xc1\x04\xcc\xf6\x6e\x5c\x27\x5c\x85\x71\x17\x9a\xf1\x97\x91\x1e\x07\x34\xde\x9a\xef\x88\xc6\x08\xf5\x77\xd8\x4a\x6e\x33\xfd\x3d\x6c\xbf\xfb\x5a\x1e\x8e\xf6\x90\x44\x70\x0c\x8d\x34\x74\x94\xb4\xc4\xa1\xd6\x8e\xce\xd0\xf7\xad\xd1\xc6\xdf\xa2\x21\xe8\xeb\x1f\x69\x6b\xd6\xff\x55\x83\xb4\x3c\x0a\xad\x6f\x23\xff\x8b\x26\x8b\xf6\x1c\xc1\x49\x3f\x66\x05\x21\x5a\xcc\x66\xf9\xda\xc5\xed\xd0\x22\x8b\xce\x90\x8d\x2c\xb2\x63\x5b\x43\xd0\x1f\x5a\x04\xa3\x96\xbf\x9e\x4b\xdf\x32\x4b\x2c\xca\xc1\x15\xeb\x1b\x99\x10\x5d\x76\x67\xe2\x6b\x25\x42\xf8\x6b\xbb\x8d\x06\x6f\x76\xa5\x1e\x7f\xb1\x52\xa0\xde\x64\x3b\x14\xc3\x2b\xe6\xf5\x63\x04\x43\xcb\x78\x64\x66\x7a\xdb\x26\x68\x94\x5d\x4a\xe2\xdb\xa8\xc5\x1f\xa4\x32\x11\xd8\x09\x3a\x18\x74\x9b\x43\xe7\xb9\xce\x99\x63\x74\xcf\x13\x04\xea\x65\x03\xfa\x3a\x0b\x9b\xc6\x2a\x86\xc9\xb9\xb3\x48\xbd\xa0\xae\x1a\x17\xeb\x6a\x7d\x5e\xa9\x58\x5c\x98\x4c\x30\x15\x1e\xf9\x32\x0d\xc5\x9f\xcc\xc7\xbe\xd1\x3e\x8a\xbc\x28\x51\x4a\x4d\x76\xc1\x8c\x7a\x00\xff\xcf\x6e\x02\x02\x36\xc1\x3b\x77\x09\xc3\x04\xf2\xf8\x3b\x7a\x4f\xcf\x47\x5d\x2e\xdd\x81\x5d\xe8\xfb\x27\xed\xe7\xa2\x31\xd7\xf7\x0c\x96\x59\x9c\xe0\x66\xbb\x71\x9d\xfa\x16\xf3\x38\x5b\xf8\x5d\x6a\x1d\xc3\xb1\x59\x62\x40\x72\x77\x7b\xd2\x5d\x8a\xc5\x2c\x5d\xed\xdc\x0d\x22\x2a\x88\xda\xfa\x29\x1c\x87\xcf\xd4\xfc\xab\x37\x04\x59\xbd\xde\x2c\x98\x54\xba\xfb\xcc\x51\xbd\x89\x14\x44\xa5\x8a\x4a\xbd\x50\x1b\x7f\xb5\x0d\xe3\xd7\x9b\xe0\x4a\x21\xd7\x4f\x06\xc2\xbf\x70\x7d\x1d\x5e\x6f\xa4\xbf\x52\xbc\xc2\x26\xa3\xc7\x80\x45\xd2\xdc\x62\x8c\x33\xdd\x99\x1e\x05\xad\x56\x6c\x4f\xa7\x6d\x63\xa6\x2f\xb9\xc3\x0b\xeb\xe8\xca\xd3\xf7\x1c\xcb\xe0\xa7\x4b\xdd\xee\x85\x4e\x2e\xb8\x5b\xd1\x3b\x17\x4b\x3a\x60\x94\xf9\x4b\xb0\xd2\xa2\x0b\x0c\x74\xf7\x62\xc9\x4c\xdf\x25\xdf\x99\x4a\xde\x60\x49\xad\xdd\x32\xa8\x73\xe7\xaf\xc0\x8c\x36\x89\x25\x42\x38\xa6\xcf\x26\xd7\x3f\x2c\x03\x69\x9e\x5f\xb5\xba\x7f\xa4\x6e\x9f\x5f\x35\x24\x3a\x84\xec\x3d\xcb\x48\x97\x62\x16\x57\x0b\xb5\x87\xe3\xd4\x57\x98\xfe\x6f\xab\xc3\xa3\x5f\x8a\xab\xfa\x99\x48\x8f\x03\x51\xa9\xfd\x96\x94\xa2\xf1\xb7\x8a\x2d\x52\x2c\x69\xfe\x14\xf5\xb1\xa5\xa6\x43\x69\xa9\x9d\x4f\xe2\xc1\xfc\xaf\xe0\x21\x56\x6f\x63\x68\x1a\x08\xf2\x42\x2d\xe5\x66\xeb\x07\x0f\xdf\xe7\xa4\xf4\xfc\x2e\x19\x7c\x31\x07\xdb\x74\x16\xe3\x73\xe7\x5e\x43\x3f\x57\xf9\x1d\xaf\x72\x39\x36\xcf\xc0\xb0\x11\xd6\x87\x5b\xcb\xfb\x3b\x64\x93\xae\x72\xdc\x22\x1f\xb1\x5c\xb2\xc4\x20\xb5\x70\x4b\xc3\x27\x73\xf0\xc7\xd0\xfe\x9d\xa9\x0d\x84\x9e\x62\x41\xd9\xcf\x93\xf5\x8c\xa7\xb8\x22\xbb\x33\x47\x9f\xd0\x56\xe1\x69\x08\xce\xa5\x5c\xd7\x75\xb6\x81\x8e\xa5\xe7\xbb\xce\x61\x7a\x4f\xa8\x2a\xe8\x46\xec\x6c\x99\x86\x89\xd9\xe0\xf3\x85\xed\xa4\xba\x2d\x54\xa4\xde\xba\xff\x0b\x00\x00\xff\xff\xa4\x57\xb6\xa1\x76\x12\x00\x00")

func templatesGrpcProtoUserUserPbGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGrpcProtoUserUserPbGo,
		"templates/GRPC/proto/user/user.pb.go",
	)
}

func templatesGrpcProtoUserUserPbGo() (*asset, error) {
	bytes, err := templatesGrpcProtoUserUserPbGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/GRPC/proto/user/user.pb.go", size: 4726, mode: os.FileMode(420), modTime: time.Unix(1712817375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGrpcProtoUserProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcc\x41\x4e\xc3\x30\x10\x46\xe1\xfd\x9c\xe2\x97\x0f\x90\x88\x84\x9d\xe5\x1d\x1b\x0e\x90\x35\x32\x30\x04\x0b\x3c\x63\x66\x1c\xd1\xaa\xea\xdd\xab\x54\xaa\xb2\xfd\x9e\xf4\xfc\x2c\x3d\x9f\x90\x10\x9a\x69\xd7\x39\x44\x6a\xf9\xe3\x27\xaf\x8c\x3b\x44\xd2\xd6\x8b\x0a\x56\x7d\x7b\x84\x14\x86\x71\x73\xb6\x10\x89\x2a\xbb\xef\xb6\x38\x1b\x2e\x04\x78\xb7\x22\x2b\x24\x57\x46\xc2\x53\x24\xa0\x48\x9f\x27\x94\x4f\x24\x4c\x11\x18\x47\x2c\x52\xfe\x36\xc6\xeb\x0b\x64\xab\xef\x6c\xf8\x52\x43\xff\x2e\x8e\xc6\xe6\x2a\xc3\x31\xe2\x9a\xcb\x2f\x12\xe6\x78\x58\xcb\xee\xff\x6a\xfb\xf0\x39\x12\x5d\xe9\x16\x00\x00\xff\xff\xcb\xb1\x2c\xa0\xc6\x00\x00\x00")

func templatesGrpcProtoUserProtoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGrpcProtoUserProto,
		"templates/GRPC/proto/user.proto",
	)
}

func templatesGrpcProtoUserProto() (*asset, error) {
	bytes, err := templatesGrpcProtoUserProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/GRPC/proto/user.proto", size: 198, mode: os.FileMode(420), modTime: time.Unix(1712817375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHttpConfigYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\xb1\x4a\x03\x41\x14\x45\xfb\xf7\x15\x97\x4d\xab\xcb\x26\x42\xc2\x4e\x2b\x88\xa0\x45\x30\xdb\xcb\xc8\xbe\x6c\x86\x4c\x32\xc3\xcc\x18\x89\x9f\x10\x10\x2d\x2c\x2c\x52\x28\x82\x08\x22\xc1\x2a\x82\xbf\xe3\x26\x7e\x86\xcc\x46\xb0\x3a\xef\x1e\x0e\x4f\x5a\x5b\xcc\x2d\x0b\x1c\x17\x45\x1f\xad\x24\x22\xd9\x43\x52\x9d\xf5\x0f\x23\x0b\xe9\xc7\x91\x27\x72\x38\x96\x09\x69\x53\x9d\xf2\x8c\xb5\x40\x37\xde\x47\x4a\xb3\x40\x32\x99\x6b\x53\x0d\x95\xe6\x54\x9b\x2a\x21\xcf\x6e\xa6\xd8\x9f\x4f\xe5\x84\x05\x02\xfb\x40\x44\x8e\x4b\xe5\x05\x01\xfb\xf8\xf7\x9d\x0e\x01\xc0\xc8\xf8\x00\x81\x76\xa7\x97\x66\x69\x96\xb6\x1b\x69\x8d\x8b\xb2\x7b\xd0\xcb\x77\x5b\x7a\x7f\x65\x5c\x29\x9a\x55\x5e\x40\x20\xfb\x0b\x8d\x1e\xa8\x6b\x16\x68\x67\x44\xa3\x10\x6c\xa5\xa6\x03\x76\x33\x76\xb1\x8d\x7f\x04\xf2\x3c\xcf\x81\xd6\x66\x79\x53\x2f\x9e\xb6\x6f\xab\xfa\xf6\x99\x00\x69\x2d\x4f\xcb\xbe\x75\x66\x08\x81\xe0\x2e\x19\xad\xcd\xc3\xaa\xbe\x7b\xa9\x97\xaf\x3f\xeb\xd5\xf6\xfe\xe3\xfb\xf3\x7d\xb3\xfe\xaa\x17\x8f\xb0\x4d\xb6\xb3\x44\x44\xbf\x01\x00\x00\xff\xff\x27\x74\x7b\xb9\x3b\x01\x00\x00")

func templatesHttpConfigYmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHttpConfigYml,
		"templates/HTTP/config.yml",
	)
}

func templatesHttpConfigYml() (*asset, error) {
	bytes, err := templatesHttpConfigYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/HTTP/config.yml", size: 315, mode: os.FileMode(420), modTime: time.Unix(1726715596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHttpMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\x4f\x6b\x14\x31\x14\x3f\x27\x9f\xe2\x19\x10\x92\x32\x4e\xba\x42\x11\x84\x9e\x64\x5d\x7b\x5b\xba\xde\xcb\x6c\xfa\x26\x9b\x3a\xf3\x32\x64\xde\xa8\x20\xfd\x02\x15\x41\x50\x6f\x5e\xbc\xf5\xd6\x93\x17\x41\xfc\x32\x6e\xf5\x63\x94\xcc\x6c\x2f\x3d\xec\x69\xf2\xf2\xfb\xf7\x7e\x93\xae\x72\x6f\x2a\x8f\xd0\x56\x81\xa4\x0c\x6d\x17\x13\x83\x96\x42\xd5\x2d\x2b\x29\x94\x0f\xbc\x19\xd6\xa5\x8b\xad\xf5\x81\x9e\xf8\x48\xc1\xe5\xd3\x03\xec\x22\x34\x81\x9e\xcd\x0e\x8f\x2c\xae\xab\x1e\x95\x14\x67\xb0\x1f\xdf\x83\xda\x81\x43\x63\xe7\xf9\xb8\x08\x74\x8a\x7d\x17\x69\xd2\x34\xd1\xe7\x4f\xec\x95\x34\x52\x5a\x0b\x7f\x7f\xff\xf9\xf7\xf5\xda\x47\x48\x03\x8d\x1d\x4a\x1f\x01\xb6\x9f\x6f\xb6\x57\xd7\xb7\x3f\x3f\xfe\xbf\xf9\x76\xfb\xfd\xd3\xf6\xea\x87\xac\x07\x72\x23\x41\x1b\xf8\x20\x45\x57\xf1\xa6\x80\x33\x78\x7e\x0c\xb1\x2f\x17\xc8\xef\xce\xb5\x91\x52\x8c\xf9\xe5\x0a\x79\x99\xe2\x05\x3a\x5e\x56\xbc\xd1\x99\x6c\xee\xb1\x13\x0a\xac\xc7\x29\x8b\xa7\xbb\x05\xf2\x7c\x7d\x42\x3d\x57\xe4\x70\xf4\x49\x05\x60\x4a\x13\x23\xc3\xaf\x98\xbb\x15\xa6\xb7\x98\xb2\xd6\xe6\x3f\x08\xdb\x5f\x5f\xa4\x08\xf5\x48\x7c\x74\x0c\x14\x9a\xbc\x99\x68\xa2\x2f\x97\x15\x05\xd7\x90\xc6\x94\xca\x79\x4a\x31\x69\x63\xa4\xb8\xcc\xa9\x79\xb9\x15\xc7\xee\xe5\x40\x4e\xe7\x56\x53\x21\x61\x2d\x87\x16\xcb\x55\x83\xd8\xe9\xd9\x11\x1c\xc0\x34\xa3\x8b\x74\x6e\xee\x7d\x53\x20\x6e\x48\xab\x9e\x63\xa7\xb2\xa5\x91\x22\x95\x8b\xf9\x6b\xad\x6c\x17\xc8\xab\x02\x46\x4f\x17\x89\xf1\x3d\xc3\x81\x0f\x54\xbe\x98\x86\x29\xe7\xe1\xb3\xec\xf6\xdb\x09\x0a\x78\x7a\x38\x2b\xa0\x6e\x79\xba\xaf\xb5\x0a\x54\x47\x78\xdc\xe7\x9a\xaa\x00\xc5\xd8\xb3\x32\x05\xa8\x5d\xfc\xd8\xe9\x74\x20\x6d\xe4\xa5\xbc\x0b\x00\x00\xff\xff\x38\x0b\x38\xbf\x8e\x02\x00\x00")

func templatesHttpMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesHttpMainGo,
		"templates/HTTP/main.go",
	)
}

func templatesHttpMainGo() (*asset, error) {
	bytes, err := templatesHttpMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/HTTP/main.go", size: 654, mode: os.FileMode(420), modTime: time.Unix(1726714327, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesKafkaConfigYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x6b\x13\x41\x14\xc7\xef\xf3\x29\x1e\xd3\x43\x2e\x1a\xb6\x2d\x28\xdd\x6b\x45\x2c\x16\x2c\x65\xc1\x83\x48\x98\x94\x97\x75\xd8\xcd\xce\xb2\x33\x09\xf6\xb6\xd2\x0d\xb4\xb4\xb6\x20\x6a\x60\xd1\x9b\x90\x83\xda\x08\x86\x14\xe9\x46\x3f\x8c\x99\xdd\xcd\x29\x5f\x41\x66\x5a\x4f\x25\xa7\xf7\xd8\xff\x6f\x7f\xef\xbd\x61\x71\xec\x1d\xc6\xe8\xc2\x53\xd6\x09\x18\xac\xd1\x27\x9e\xb7\x47\xef\x01\xf5\xf7\xf7\xb6\x4d\xf5\x98\x0c\x4c\xb5\x39\x25\xa1\xf0\x77\xb1\x8f\xa1\x0b\x9b\xa6\x7f\xcc\x43\x74\x81\x76\x0f\x43\xe1\x77\x78\x88\xcd\x50\xf8\x94\x48\x4c\xfa\x1c\x65\x2b\x62\x5d\x74\x41\xa1\x54\x84\x90\xc0\x08\xb6\x45\x24\x7b\x5d\x4c\xa4\x4b\x00\xee\xc3\x0d\x40\x59\xbb\x65\x20\x4a\x00\x00\xda\x89\x08\x0c\x00\x2f\xe8\xfa\xc6\xc3\xa6\xd3\x74\x9a\xeb\xee\x96\xb3\xb5\x41\x5f\xda\x5c\x89\x98\x1f\xd8\x98\xf5\x94\x68\xed\xf2\x28\xf0\x12\x76\x10\xf0\xc8\xbf\x25\xfc\x44\xf4\xe2\x9d\x47\x2e\xdc\x01\x6c\x6c\xbe\x3e\xeb\x74\x24\xaa\x7d\x94\xa8\x5c\x88\x44\x84\x00\x6b\xa0\x8b\x54\x8f\x4e\xcb\xe9\x71\x3d\xf9\x55\xe5\xd9\x7c\xf6\xb6\x9a\x5d\x2e\x8b\x33\x7d\x31\xae\x8f\x66\x55\x9e\xe9\xb4\xd0\x67\x83\xf2\xf4\x5b\x03\x59\x12\x72\x94\xaa\xf1\x37\x7d\xd3\x08\x99\xfa\xdf\x1a\x55\xc3\x4e\xe9\xb2\xd7\xcf\x19\x57\x1e\x37\x17\x6e\x3a\x8e\x63\x26\xcc\xaf\xcf\xed\x3b\xd6\xe7\x57\xfa\xe2\x63\x7d\xf9\x43\xcf\x3e\x54\x79\x56\x7e\x4a\xf5\x97\x51\xf5\xfd\x44\xff\x1e\x94\xc3\xe9\x62\x38\x59\x16\xc7\xe5\xf8\x6b\x35\x7a\xb7\x2c\x4e\xac\x4e\xa2\x94\x5c\x44\x46\x27\x7a\xca\x85\x07\xb7\xc6\x9b\x6d\xeb\x74\x50\x5d\x67\xf3\x22\xaf\xc7\x9f\xab\x3c\xab\xa7\x46\xb3\xc2\xf4\x0a\x59\xa2\xda\xc8\xd4\x4e\xa4\x30\xe9\xb3\xd0\xae\x67\xef\xff\x73\x54\x5f\xfd\x5c\x0c\x27\x8b\xfc\xfd\x8a\x9f\x09\x21\xff\x02\x00\x00\xff\xff\xd6\x0a\xcd\x21\x32\x02\x00\x00")

func templatesKafkaConfigYmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesKafkaConfigYml,
		"templates/KAFKA/config.yml",
	)
}

func templatesKafkaConfigYml() (*asset, error) {
	bytes, err := templatesKafkaConfigYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/KAFKA/config.yml", size: 562, mode: os.FileMode(420), modTime: time.Unix(1726715596, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesKafkaMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\xc1\x6a\x14\x41\x10\x3d\x6f\x7f\x45\xd1\x10\xe8\x91\xa5\x47\x0f\x22\x04\x3c\x04\x09\x31\x88\xb0\x64\xc5\x93\x10\x7a\x3a\xb5\xbd\x9d\x9d\xe9\x1e\xba\x6b\x30\x21\xec\xc1\x5b\x88\x28\x1e\x22\x78\xf0\xa2\xa7\xdc\xd6\x8b\x41\x08\xe2\xcf\xec\x8e\xfa\x17\xd2\x33\x1b\x30\x22\x39\x35\x35\xef\xd5\x7b\x6f\xea\xd5\x4a\xcf\x94\x41\xa8\x94\x75\x8c\xd9\xaa\xf6\x81\x40\xb0\x01\xd7\xde\x11\x1e\x11\x67\x03\x6e\x2c\x4d\x9b\x42\x6a\x5f\xe5\xe3\xa9\xaf\xed\xe4\x38\x8f\x2a\xa8\x4a\xfd\x03\x1e\xda\xd2\xba\x07\xf7\xee\xde\xcf\xb1\x50\x11\x6f\x47\xf3\x99\x9a\xcc\x54\xfe\xc8\xbb\xd8\x54\x18\xb6\x0a\xdf\x74\x66\xa5\x37\xe9\xf1\x91\xb3\x8c\xb1\x49\xe3\x34\x6c\x69\xb2\xde\x89\x2a\x1a\xb8\xd3\x1b\xcb\xeb\xb5\xa7\x18\xa3\x32\x38\x04\x4d\x47\xb0\x8e\x9c\xc0\xf4\x66\x80\x21\xf8\x00\x27\x6c\x50\x7a\x23\x47\xc1\x3a\x9a\x08\xbe\xbc\x7a\xbb\xfc\x76\xf5\xfb\xf3\x07\xd8\x88\xc0\xbb\x4d\xf9\x5c\x95\x0d\x0a\xce\xb3\xec\x16\x6e\x7b\x7e\xb9\x3a\xfd\xd2\x5e\x9e\xb6\xaf\x16\x9b\xb0\x11\x5f\x38\x3e\x84\x2a\x1a\xf9\xcc\xd7\x56\x0f\x21\x52\xb0\xce\xa4\x98\xbd\x5e\x12\x0b\x48\x4d\x70\xe0\x6c\xc9\xe6\xeb\xbf\x89\x48\x4d\x2d\xfe\x0a\x77\x93\x93\xe7\xb0\xfc\xfe\xe3\xe7\xf9\x85\xf1\x10\x1a\xd7\x15\x23\x8d\x07\x58\xbd\x5b\xac\xce\x2e\xda\xaf\xaf\x7f\x2d\xde\xb7\x1f\xdf\xac\xce\x3e\xf5\x7a\x89\x20\xb2\x24\x54\x2b\x9a\x0e\x61\x1f\x36\x1f\x82\x8f\x72\x07\xe9\xe5\x81\xc8\x18\x1b\x74\xf7\x96\x63\xa4\x51\xf0\x87\xa8\x69\xa4\x68\x2a\x12\x39\xbb\xc6\x76\x9d\x25\xd1\x4d\x69\xb9\xff\xb6\x83\xb4\x5d\xec\xba\x48\xca\x69\xec\x41\xb9\xad\xe2\xf1\x1e\x1a\x1b\x09\xc3\x93\xd4\xdf\x63\xe5\x0e\x4a\x14\x5c\x15\xfb\x84\x91\xf8\x10\x6e\x14\x9a\x4c\xfb\xf6\xd6\x45\x45\xd1\x8f\xd9\x7f\x88\xe3\xee\x30\xdd\x79\xb2\x3e\xb6\xdc\x6b\x5c\x72\x8e\x58\xa2\x26\x38\x99\xb3\x39\xfb\x13\x00\x00\xff\xff\x5e\xf8\x91\x33\xb1\x02\x00\x00")

func templatesKafkaMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesKafkaMainGo,
		"templates/KAFKA/main.go",
	)
}

func templatesKafkaMainGo() (*asset, error) {
	bytes, err := templatesKafkaMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/KAFKA/main.go", size: 689, mode: os.FileMode(420), modTime: time.Unix(1726714361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTaskConfigYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x41\x4b\xc3\x40\x10\x85\xef\xf9\x15\x8f\xf5\xaa\x21\x31\xd0\xe2\x5c\x0b\xa2\xa8\x58\x34\x77\x99\x92\x69\x0c\xdd\x64\x96\x9d\x58\x5b\x7f\xbd\x6c\x5a\xb0\x8a\x3d\xbd\xdd\x6f\xf7\xcd\x7c\x1c\x42\xbd\x0f\x42\xa8\xd9\x36\xb8\x70\x77\x75\xbd\x74\x97\x70\xed\xcb\x72\x91\x32\xe1\x94\x0f\xbc\xde\xb0\xcb\xbc\xb6\x8f\xb2\x15\x4f\x28\xd3\xf9\xb6\xf3\x42\x70\xfd\xde\x6b\xbb\xee\xbc\xe4\x5e\x5b\x97\x99\xc4\x6d\x27\xf6\x36\x70\x2f\x84\x51\x6c\xcc\xb2\x86\x47\x5e\xb1\x89\x51\x06\x5c\xe1\xe4\x09\x00\xde\xd5\x46\x42\x79\x3d\xcf\x8b\xbc\xc8\xcb\x89\x05\x8d\x23\xa1\xaa\x8a\xd9\x74\xfd\x30\x89\x87\x56\x54\x3d\xb4\x02\x9b\x7d\x6a\x6c\x4e\x50\xb3\xfa\x33\xb9\xe7\xdd\x7d\xe3\x65\xa1\xc3\x60\x84\xb2\x98\xe0\x13\xef\x9e\x83\x0c\x3f\x30\x4a\xd3\x9d\x37\xc3\x7f\x6a\x20\xcc\xaa\xf9\xcd\x6f\x91\xa3\x03\x08\xc5\xf1\xa3\xfa\xd7\xee\x4b\xd2\x92\xef\x00\x00\x00\xff\xff\x74\x0d\x1a\xc5\x6a\x01\x00\x00")

func templatesTaskConfigYmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTaskConfigYml,
		"templates/TASK/config.yml",
	)
}

func templatesTaskConfigYml() (*asset, error) {
	bytes, err := templatesTaskConfigYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/TASK/config.yml", size: 362, mode: os.FileMode(420), modTime: time.Unix(1712817375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTaskMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x31\x6b\x54\x41\x14\x85\xeb\xb9\xbf\x62\x9c\x6a\x06\x36\x33\x6e\x21\x42\x20\x8d\xb8\x48\x0a\x41\xa2\xbd\xbc\x9d\xcc\x4e\xc6\x7d\x7b\xef\x72\xdf\xbc\xa0\x84\xb4\x16\x51\x41\x50\x11\xc5\xc6\x6e\xb1\x30\x85\x28\x62\x90\xfc\x99\x7d\xcf\xfc\x0c\x99\xb7\x8b\x68\x63\x7b\xce\xe1\x3b\x9c\xb3\xac\xfc\xbc\x8a\x41\x2e\xaa\x84\x00\x69\xb1\x24\xce\x52\x83\x50\x9e\x30\x87\xc7\x59\x81\x50\x31\xe5\xa3\x76\x6a\x3d\x2d\xdc\xa3\x54\x27\xbc\x39\xbe\x7e\xc3\x85\x69\xd5\x04\x05\xe2\xa1\xfc\xbf\xaf\x6a\x8a\x0a\x0c\x80\x73\xeb\x9f\x97\xbf\x5e\xaf\x22\x49\x6e\x71\x28\xb4\x91\xa4\xec\x5e\x9e\x77\x67\xab\xfe\xeb\xb3\xab\xf3\x37\xfd\x87\x17\xdd\xd9\x47\x98\xb5\xe8\x87\x80\x36\xf2\x04\x40\x0c\x2c\xbb\x8f\x29\x6b\x03\x82\xc3\x61\x6a\xbc\xdc\xdd\x93\x1b\xfd\x4e\xc8\x07\x45\xd2\x2a\x87\x26\xab\x3f\x09\x7b\x9b\xf4\x76\x85\xbd\x55\xf9\x79\x64\x6a\xf1\x50\x9b\x91\x54\x31\x64\x35\x92\x2a\xe1\x8c\x4a\x3e\x4c\xff\xa1\x4d\xa6\xfb\xd8\xe4\x0a\x7d\x28\x75\xcd\x48\x06\xe6\x4d\xa0\xb8\x0f\xaa\x66\x7e\x3f\xf0\x71\xe0\xe2\x3a\x77\x94\xf3\xb2\xd9\x75\xee\xaf\x17\x22\xed\x78\xda\xa1\xa5\x8b\xe4\x99\x50\x6e\x86\x5f\x5d\xbe\x5b\x7f\xff\xd4\xfd\x78\x05\x22\xcd\x06\xe6\xb5\x3d\x89\xa9\x96\x27\x20\x44\x4d\xd1\xde\xab\x30\xf9\x1a\x75\x60\xb6\x13\x66\x62\x6d\x0c\x88\xd3\x52\xd2\x7f\x59\x75\x4f\x9f\x77\x9f\xdf\xf7\x6f\xbf\xad\x2f\x2e\xca\x49\xa2\xb1\x93\xe3\xc0\x4f\xf4\xd8\xd8\xbb\x09\xdb\x1c\xb4\x29\x93\xcb\x79\xc3\x6f\x5b\x28\x27\xcc\x35\xea\x71\x41\x0d\x5b\xed\x41\x8b\xda\xc0\x29\xfc\x0e\x00\x00\xff\xff\xed\x09\x83\x4e\xfc\x01\x00\x00")

func templatesTaskMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesTaskMainGo,
		"templates/TASK/main.go",
	)
}

func templatesTaskMainGo() (*asset, error) {
	bytes, err := templatesTaskMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/TASK/main.go", size: 508, mode: os.FileMode(420), modTime: time.Unix(1712817375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMicroConfigYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x4f\x4f\x13\x41\x18\xc6\xef\xfb\x29\xde\x6c\xaf\xda\x74\x21\x42\x3a\x57\x12\xa3\x51\x23\x91\xde\x9b\x81\x7d\xd9\x6e\xd8\xee\x4c\x66\x96\x0a\x9e\x50\x6c\x03\x84\x0a\x1a\x30\x18\x2b\xda\x48\xa0\x11\x05\x4d\x0f\x45\xcb\x9f\x2f\xd3\x99\xed\x9e\xfa\x15\xcc\x76\xa9\xad\x7f\x12\x4f\xef\xcc\x93\xdf\xfb\xce\x33\xf3\x0c\xe5\x3c\xb7\xcc\x91\xc0\x9d\x5c\x6e\x1a\x52\x66\x5c\xcc\x1b\x60\x3a\x8f\xa6\xa7\xe2\x9a\xa3\x72\x21\xae\xf7\xe8\xfc\x02\x35\x0d\x8f\x39\xf7\xb1\x84\x1e\x01\x2b\x5e\xdf\x76\x3d\x24\x60\x16\x97\x3d\xe6\xcc\xbb\x1e\xa6\x3d\xe6\x98\x86\x44\x51\x72\x51\xe6\x7d\x5a\x44\x02\x01\xca\xc0\x30\x8a\xee\x9c\x60\x40\x00\x20\x05\xea\xf2\x44\xd7\xaa\x6a\xa3\x1e\xbe\x3d\x53\xe5\x66\x54\xae\x86\x17\x27\x00\xbd\xf3\xb5\xe8\xdd\xbe\xba\x2a\x47\xf5\x76\xef\x7c\xdd\x00\x70\x65\x5e\xa0\x03\x04\x02\xb1\x88\x00\x29\xbd\x77\xaa\xb6\x0f\x75\x6d\x3d\x69\xd7\xcd\x86\xaa\x6c\x26\x5c\x01\xa9\x08\xf2\x7c\x51\x16\xfe\xc4\xd5\xd5\x6a\xb7\xd5\xd4\x2f\x1a\xd1\xca\xd3\xc1\xcc\x22\x2b\x61\xbe\x6f\x73\x0e\xff\xc3\x0f\x07\xe7\x25\x47\xb4\x81\xc0\x2d\x80\xd4\x28\x15\xad\xbc\x57\x3f\x0e\x41\x55\x77\x3b\x17\x55\x08\x8f\x5e\x01\xa8\xc3\x67\x7a\xbf\xd6\x39\xab\xaa\xfa\xb1\xaa\xbc\x51\x5f\x2b\x6a\xeb\x93\x5e\x3f\xea\xd6\x37\x2d\xfd\xb9\x0e\xbd\xf3\xcd\xa8\xbd\xd7\x3d\x39\x08\x77\x1a\x7a\xad\xa5\x5f\x7f\xd7\xcd\x5d\x55\x29\x47\xab\x0d\x75\xf0\x3c\xdc\xae\x24\xf3\xa3\x95\x76\xf7\xf2\xa5\x61\xd8\x34\xa0\xb3\x54\xa2\x24\x06\xc0\x4d\x18\x3e\xac\x65\x19\x00\x00\x05\x26\x03\x02\xd6\xd8\x64\x3a\x93\xce\xa4\x13\x8d\x33\x11\x10\x18\x1f\xcf\x4c\xf4\xb7\x8b\x12\x45\xd2\x27\x18\x0b\x12\x82\x4a\xf9\x98\x09\x7b\x44\xb2\x67\x47\x42\x8b\x85\x22\x5d\xba\x6b\x7b\x38\xc5\x7c\x5f\x12\xb0\x32\x7d\xf1\x01\x5d\x7a\xc8\xd1\x1f\x8a\x02\x6d\xf7\x2f\x6f\x63\x63\xbf\xbc\xc1\xbf\xcc\x01\x81\x89\xf1\xc9\xec\xef\x56\xae\x5d\x00\x81\xcc\x35\xc8\xbc\x19\xf7\x09\xf6\x8f\x31\x0a\x41\xc0\x1d\xd7\x9f\x41\x51\x42\x11\xb3\xc9\x25\xb3\xd9\x6c\x36\xce\x2f\xf9\x54\xc7\xa7\x6a\xeb\xa3\x01\x40\x39\x47\xdf\x9e\xe6\x82\xcd\x0f\x32\x1e\x44\x5c\x6b\x74\x5b\xa7\xe1\xce\xb7\xce\xd9\x17\xdd\x6a\xab\x8d\x0f\xc0\xfb\x58\xa2\xfe\x0c\x00\x00\xff\xff\x79\xe2\x28\x0b\x14\x03\x00\x00")

func templatesMicroConfigYmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesMicroConfigYml,
		"templates/micro/config.yml",
	)
}

func templatesMicroConfigYml() (*asset, error) {
	bytes, err := templatesMicroConfigYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/micro/config.yml", size: 788, mode: os.FileMode(420), modTime: time.Unix(1726714482, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMicroMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcd\x8a\x13\x41\x10\xc7\xcf\x5d\x4f\xd1\xf6\xa9\x47\xe2\x8c\x1e\x44\x58\xd8\x93\x86\x6c\x6e\x21\xeb\x7d\xe9\x8c\x95\x4e\xaf\x33\xdd\xb1\xa7\x26\x2e\x48\x40\x11\x3c\xc4\x0f\x04\xf5\x26\xa2\x9e\x72\xdb\xc3\x22\x82\x20\xfb\x32\x4e\x5c\xdf\x42\xba\x27\x6b\xa2\x2c\x8b\xa7\xf9\xa8\x5f\xd5\xef\xdf\x45\x4f\x55\x7e\x5f\x69\xe4\xa5\x32\x16\xc0\x94\x53\xe7\x89\x4b\x60\x62\x5c\x92\x00\x26\xb4\xa1\x49\x3d\x4a\x73\x57\x66\xda\xd8\x6b\xda\x59\x93\x87\xb7\x7f\x6a\x87\xa6\x30\xf6\xd6\x8d\xeb\x37\x33\x1c\xa9\x0a\x05\xb0\x03\x7e\x79\x5d\x14\x4e\x87\x87\xab\x04\x24\x00\x59\xc6\x7f\x7c\x3f\xfd\xf9\x76\xa9\x1d\xf7\xb5\x8d\x79\x52\xed\x38\x6f\x5e\x1f\x37\x8b\xe5\xea\xcb\xf3\xb3\xe3\x77\xab\xf7\x2f\x9b\xc5\x27\x18\xd7\x36\x8f\x80\x4c\xf8\x23\x60\x53\x45\x93\x0e\x3f\xe0\x3b\xbb\xdc\x55\x69\x0f\xe9\xe1\x3d\x99\x00\x8b\xa2\x74\x1f\x69\xe0\xdd\x21\xe6\x34\x50\x34\x91\x81\x4d\x80\x65\x59\xf3\xf9\x43\xb3\xf8\xd8\x9c\x3e\x3d\xfb\x7a\xb2\x7a\xb5\xfc\xf5\xf8\xc9\x56\xc7\x1e\x2a\x4f\x23\x54\x34\xa8\xab\x89\x0c\x3a\x99\x70\xf4\xde\xf9\xe0\x63\x85\xd3\xe9\xc0\x1b\x4b\x85\x95\xe2\x2f\x56\x24\xc0\x98\x47\xaa\xbd\xe5\xd6\x14\xc0\xe6\x09\x6c\x6c\x6d\xfc\xd5\xc9\xb2\x79\xf6\x62\xcb\x36\x44\x1d\x15\x97\x7b\xd6\xd4\xc5\x86\xad\x59\xa5\x9b\xe1\x7f\x8d\x3b\x07\x2f\x9a\xb8\x1e\xd8\xb7\x86\xda\x55\x86\xe5\xb6\xff\x7a\x48\xdd\x51\xdf\x56\xa4\x6c\x8e\xa1\xe8\x3b\xc1\xd1\x02\xa1\xba\x47\x34\xdd\x47\x3f\x43\x2f\xe3\xa6\xb5\xb1\xbc\xf9\xf6\x06\x98\x19\x47\xf0\xca\x6e\xd0\x6c\x12\x29\x6b\xf2\xc2\x4a\xf4\x3e\xed\x86\xac\x32\x49\x80\xcd\x01\x98\x4f\x7b\xdd\xbb\x52\x64\x53\x63\xb5\xe8\xf0\x78\x9e\xdc\x59\xc2\x23\xe2\x57\xb5\xb1\xe9\xed\xf6\x23\x5e\x02\x36\x53\x45\x8d\x1d\x8e\x47\xa6\xa2\x2a\xa4\x59\xa3\x21\x92\x14\xdd\x90\x7d\x88\x0f\x6a\xac\xa8\x7f\x27\x1e\x39\xc4\x69\xe1\xd0\xce\xc6\x25\x6d\xb6\xe3\xcf\xc9\x1d\xd1\xe1\x71\x72\xe8\x98\xff\xd9\x76\x3a\xac\xad\x4c\x60\x0e\xbf\x03\x00\x00\xff\xff\xf5\x84\x4a\xe8\x3f\x03\x00\x00")

func templatesMicroMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesMicroMainGo,
		"templates/micro/main.go",
	)
}

func templatesMicroMainGo() (*asset, error) {
	bytes, err := templatesMicroMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/micro/main.go", size: 831, mode: os.FileMode(420), modTime: time.Unix(1726714517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/GRPC/config.yml":                 templatesGrpcConfigYml,
	"templates/GRPC/main.go":                    templatesGrpcMainGo,
	"templates/GRPC/proto/auth.proto":           templatesGrpcProtoAuthProto,
	"templates/GRPC/proto/user/auth.pb.go":      templatesGrpcProtoUserAuthPbGo,
	"templates/GRPC/proto/user/auth_grpc.pb.go": templatesGrpcProtoUserAuth_grpcPbGo,
	"templates/GRPC/proto/user/user.pb.go":      templatesGrpcProtoUserUserPbGo,
	"templates/GRPC/proto/user.proto":           templatesGrpcProtoUserProto,
	"templates/HTTP/config.yml":                 templatesHttpConfigYml,
	"templates/HTTP/main.go":                    templatesHttpMainGo,
	"templates/KAFKA/config.yml":                templatesKafkaConfigYml,
	"templates/KAFKA/main.go":                   templatesKafkaMainGo,
	"templates/TASK/config.yml":                 templatesTaskConfigYml,
	"templates/TASK/main.go":                    templatesTaskMainGo,
	"templates/micro/config.yml":                templatesMicroConfigYml,
	"templates/micro/main.go":                   templatesMicroMainGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"GRPC": &bintree{nil, map[string]*bintree{
			"config.yml": &bintree{templatesGrpcConfigYml, map[string]*bintree{}},
			"main.go":    &bintree{templatesGrpcMainGo, map[string]*bintree{}},
			"proto": &bintree{nil, map[string]*bintree{
				"auth.proto": &bintree{templatesGrpcProtoAuthProto, map[string]*bintree{}},
				"user": &bintree{nil, map[string]*bintree{
					"auth.pb.go":      &bintree{templatesGrpcProtoUserAuthPbGo, map[string]*bintree{}},
					"auth_grpc.pb.go": &bintree{templatesGrpcProtoUserAuth_grpcPbGo, map[string]*bintree{}},
					"user.pb.go":      &bintree{templatesGrpcProtoUserUserPbGo, map[string]*bintree{}},
				}},
				"user.proto": &bintree{templatesGrpcProtoUserProto, map[string]*bintree{}},
			}},
		}},
		"HTTP": &bintree{nil, map[string]*bintree{
			"config.yml": &bintree{templatesHttpConfigYml, map[string]*bintree{}},
			"main.go":    &bintree{templatesHttpMainGo, map[string]*bintree{}},
		}},
		"KAFKA": &bintree{nil, map[string]*bintree{
			"config.yml": &bintree{templatesKafkaConfigYml, map[string]*bintree{}},
			"main.go":    &bintree{templatesKafkaMainGo, map[string]*bintree{}},
		}},
		"TASK": &bintree{nil, map[string]*bintree{
			"config.yml": &bintree{templatesTaskConfigYml, map[string]*bintree{}},
			"main.go":    &bintree{templatesTaskMainGo, map[string]*bintree{}},
		}},
		"micro": &bintree{nil, map[string]*bintree{
			"config.yml": &bintree{templatesMicroConfigYml, map[string]*bintree{}},
			"main.go":    &bintree{templatesMicroMainGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
